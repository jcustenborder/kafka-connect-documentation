======================
TwitterSourceConnector
======================

.. image:: TwitterSourceConnector.svg


This Twitter Source connector is used to pull data from Twitter in realtime.



-------------
Configuration
-------------


^^^^^^^^^^^^^^^
filter.keywords
^^^^^^^^^^^^^^^

**Importance:** High

**Type:** List


Twitter keywords to filter for.

^^^^^^^^^^^^^^^^^^
kafka.status.topic
^^^^^^^^^^^^^^^^^^

**Importance:** High

**Type:** String


Kafka topic to write the statuses to.

^^^^^^^^^^^^^^^
process.deletes
^^^^^^^^^^^^^^^

**Importance:** High

**Type:** Boolean


Should this connector process deletes.

^^^^^^^^^^^^^^^^^^^^^^^^^
twitter.oauth.accessToken
^^^^^^^^^^^^^^^^^^^^^^^^^

**Importance:** High

**Type:** Password


OAuth access token

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
twitter.oauth.accessTokenSecret
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Importance:** High

**Type:** Password


OAuth access token secret

^^^^^^^^^^^^^^^^^^^^^^^^^
twitter.oauth.consumerKey
^^^^^^^^^^^^^^^^^^^^^^^^^

**Importance:** High

**Type:** Password


OAuth consumer key

^^^^^^^^^^^^^^^^^^^^^^^^^^^^
twitter.oauth.consumerSecret
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Importance:** High

**Type:** Password


OAuth consumer secret

^^^^^^^^^^^^^
twitter.debug
^^^^^^^^^^^^^

**Importance:** Low

**Type:** Boolean

**Default Value:** false


Flag to enable debug logging for the twitter api.

--------
Examples
--------

^^^^^^^^^^^^^^^^^^^^^^
Property based example
^^^^^^^^^^^^^^^^^^^^^^


This configuration is used typically along with `standalone mode
<http://docs.confluent.io/current/connect/concepts.html#standalone-workers>`_.

.. code-block:: properties
    :name: connector.properties
    :emphasize-lines: 4,5,6,7,8,9,10

    name=TwitterSourceConnector1
    connector.class=com.github.jcustenborder.kafka.connect.twitter.TwitterSourceConnector
    tasks.max=1
    filter.keywords=< Required Configuration >
    kafka.status.topic=< Required Configuration >
    process.deletes=< Required Configuration >
    twitter.oauth.accessToken=< Required Configuration >
    twitter.oauth.accessTokenSecret=< Required Configuration >
    twitter.oauth.consumerKey=< Required Configuration >
    twitter.oauth.consumerSecret=< Required Configuration >




^^^^^^^^^^^^^^^^^^
Rest based example
^^^^^^^^^^^^^^^^^^


This configuration is used typically along with `distributed mode
<http://docs.confluent.io/current/connect/concepts.html#distributed-workers>`_.
Write the following json to `connector.json`, configure all of the required values, and use the command below to
post the configuration to one the distributed connect worker(s). Check here for more information about the
`Kafka Connect REST Interface. <https://docs.confluent.io/current/connect/restapi.html>`_

.. code-block:: json
    :name: connector.json
    :emphasize-lines: 6,7,8,9,10,11,12

    {
      "config" : {
        "name" : "TwitterSourceConnector1",
        "connector.class" : "com.github.jcustenborder.kafka.connect.twitter.TwitterSourceConnector",
        "tasks.max" : "1",
        "filter.keywords" : "< Required Configuration >",
        "kafka.status.topic" : "< Required Configuration >",
        "process.deletes" : "< Required Configuration >",
        "twitter.oauth.accessToken" : "< Required Configuration >",
        "twitter.oauth.accessTokenSecret" : "< Required Configuration >",
        "twitter.oauth.consumerKey" : "< Required Configuration >",
        "twitter.oauth.consumerSecret" : "< Required Configuration >"
      }
    }



Use curl to post the configuration to one of the Kafka Connect Workers. Change `http://localhost:8083/` the the endpoint of
one of your Kafka Connect worker(s).

.. code-block:: bash
    :caption: Create a new connector

    curl -s -X POST -H 'Content-Type: application/json' --data @connector.json http://localhost:8083/connectors


.. code-block:: bash
    :caption: Update an existing connector

    curl -s -X PUT -H 'Content-Type: application/json' --data @connector.json http://localhost:8083/connectors/TwitterSourceConnector1/config


