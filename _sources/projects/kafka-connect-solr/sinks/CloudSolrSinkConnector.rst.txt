==========
Cloud Solr
==========

This connector is used to connect to `SolrCloud <https://cwiki.apache.org/confluence/display/solr/SolrCloud>`_ using the Zookeeper based configuration.


.. TIP::
    The target collection for this connector is selected by the topic name. `Transformations <https://kafka.apache.org/documentation/#connect_transforms>`_ like the RegexRouter transformation can be used to change the topic name before it is sent to Solr.



-------------
Configuration
-------------

--------------
Authentication
--------------


^^^^^^^^^^^^^
solr.password
^^^^^^^^^^^^^

The password to use for basic authentication.

**Importance:** High

**Type:** Password

**Default Value:** [hidden]



^^^^^^^^^^^^^
solr.username
^^^^^^^^^^^^^

The username to use for basic authentication.

**Importance:** High

**Type:** String



----------
Connection
----------


^^^^^^^^^^^^^^^^^^^^
solr.zookeeper.hosts
^^^^^^^^^^^^^^^^^^^^

Zookeeper hosts that are used to store solr configuration.

**Importance:** High

**Type:** List



^^^^^^^^^^^^^^^^^^^^^
solr.zookeeper.chroot
^^^^^^^^^^^^^^^^^^^^^

Chroot within solr for the zookeeper configuration.

**Importance:** High

**Type:** String



--------
Indexing
--------


^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
solr.delete.documents.enabled
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Flag to determine if the connector should delete documents. General practice in Kafka is to treat a record that contains a key with a null value as a delete.

**Importance:** Medium

**Type:** Boolean

**Default Value:** true



^^^^^^^^^^^^^^^^^^
solr.commit.within
^^^^^^^^^^^^^^^^^^

Configures Solr UpdaterRequest for a commit within the requested number of milliseconds. -1 disables the commit within setting and relies on the standard Solr commit setting.

**Importance:** Low

**Type:** Int

**Default Value:** -1






--------
Examples
--------

^^^^^^^^^^^^^^^^^
Drop Topic prefix
^^^^^^^^^^^^^^^^^

In this example each record has an incoming topic name prefixed with `solr-`. Assuming that our topic is `solr-customer` the following example will strip the prefix of `solr-` allowing us to write to the collection named `customer`. This is accomplished by using the RegexRouter transformation that is bundled with Apache Kafka.



Select one of the following configuration methods based on how you have deployed Kafka Connect.
Distributed Mode will the the JSON / REST examples. Standalone mode will use the properties based
example.


**Distributed Mode Json**

.. literalinclude:: CloudSolrSinkConnector.strip-prefix.example.json
    :language: JSON


**Standalone Mode Properties**

.. literalinclude:: CloudSolrSinkConnector.strip-prefix.example.properties
    :language: properties



^^^^^^^^
Standard
^^^^^^^^

This example will connect to a Solr Cloud cluster without authentication.



Select one of the following configuration methods based on how you have deployed Kafka Connect.
Distributed Mode will the the JSON / REST examples. Standalone mode will use the properties based
example.


**Distributed Mode Json**

.. literalinclude:: CloudSolrSinkConnector.example.example.json
    :language: JSON


**Standalone Mode Properties**

.. literalinclude:: CloudSolrSinkConnector.example.example.properties
    :language: properties



^^^^^^^^^^^^^^^^^^^^
Basic Authentication
^^^^^^^^^^^^^^^^^^^^

This example will connect to a Solr Cloud cluster using basic authentication.



Select one of the following configuration methods based on how you have deployed Kafka Connect.
Distributed Mode will the the JSON / REST examples. Standalone mode will use the properties based
example.


**Distributed Mode Json**

.. literalinclude:: CloudSolrSinkConnector.authentication.example.json
    :language: JSON


**Standalone Mode Properties**

.. literalinclude:: CloudSolrSinkConnector.authentication.example.properties
    :language: properties



^^^^^^^^^^^^^^^^^^^^^
Force collection name
^^^^^^^^^^^^^^^^^^^^^

In this example we do not care about the incoming topic name. We want to force all topics to a specific collection. This is accomplished by using the RegexRouter transformation that is bundled with Apache Kafka.



Select one of the following configuration methods based on how you have deployed Kafka Connect.
Distributed Mode will the the JSON / REST examples. Standalone mode will use the properties based
example.


**Distributed Mode Json**

.. literalinclude:: CloudSolrSinkConnector.force-collection.example.json
    :language: JSON


**Standalone Mode Properties**

.. literalinclude:: CloudSolrSinkConnector.force-collection.example.properties
    :language: properties




