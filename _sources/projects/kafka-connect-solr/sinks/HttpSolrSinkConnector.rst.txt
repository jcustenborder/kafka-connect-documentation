=====================
HttpSolrSinkConnector
=====================

.. image:: HttpSolrSinkConnector.svg


This connector is used to connect to write directly to a Solr core.



-------------
Configuration
-------------


^^^^^^^^
solr.url
^^^^^^^^

**Importance:** High

**Type:** String


Url to connect to solr with.

^^^^^^^^^^^^^
solr.password
^^^^^^^^^^^^^

**Importance:** High

**Type:** Password

**Default Value:** [hidden]


The password to use for basic authentication.

^^^^^^^^^^^^^
solr.username
^^^^^^^^^^^^^

**Importance:** High

**Type:** String


The username to use for basic authentication.

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
solr.delete.documents.enabled
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Importance:** Medium

**Type:** Boolean

**Default Value:** true


Flag to determine if the connector should delete documents. General practice in Kafka is to treat a record that contains a key with a null value as a delete.

^^^^^^^^^^^^^^^
solr.queue.size
^^^^^^^^^^^^^^^

**Importance:** Medium

**Type:** Int

**Default Value:** 100

**Validator:** [1,...,2147483647]


The number of documents to batch together before sending to Solr. See `ConcurrentUpdateSolrClient.Builder.withQueueSize(int) <https://lucene.apache.org/solr/6_3_0/solr-solrj/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder.html#withQueueSize-int->`_

^^^^^^^^^^^^^^^^^
solr.thread.count
^^^^^^^^^^^^^^^^^

**Importance:** Medium

**Type:** Int

**Default Value:** 1

**Validator:** [1,...,100]


The number of threads used to empty ConcurrentUpdateSolrClients queue. See `ConcurrentUpdateSolrClient.Builder.withThreadCount(int) <https://lucene.apache.org/solr/6_3_0/solr-solrj/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder.html#withThreadCount-int->`_

^^^^^^^^^^^^^^^^^^
solr.commit.within
^^^^^^^^^^^^^^^^^^

**Importance:** Low

**Type:** Int

**Default Value:** -1


Configures Solr UpdaterRequest for a commit within the requested number of milliseconds .

--------
Examples
--------

^^^^^^^^^^^^^^^^^^^^^^
Property based example
^^^^^^^^^^^^^^^^^^^^^^


This configuration is used typically along with `standalone mode
<http://docs.confluent.io/current/connect/concepts.html#standalone-workers>`_.

.. code-block:: properties
    :name: connector.properties
    :emphasize-lines: 4,5

    name=HttpSolrSinkConnector1
    connector.class=com.github.jcustenborder.kafka.connect.solr.HttpSolrSinkConnector
    tasks.max=1
    topics=< Required Configuration >
    solr.url=< Required Configuration >




^^^^^^^^^^^^^^^^^^
Rest based example
^^^^^^^^^^^^^^^^^^


This configuration is used typically along with `distributed mode
<http://docs.confluent.io/current/connect/concepts.html#distributed-workers>`_.
Write the following json to `connector.json`, configure all of the required values, and use the command below to
post the configuration to one the distributed connect worker(s). Check here for more information about the
`Kafka Connect REST Interface. <https://docs.confluent.io/current/connect/restapi.html>`_

.. code-block:: json
    :name: connector.json
    :emphasize-lines: 6,7

    {
      "config" : {
        "name" : "HttpSolrSinkConnector1",
        "connector.class" : "com.github.jcustenborder.kafka.connect.solr.HttpSolrSinkConnector",
        "tasks.max" : "1",
        "topics" : "< Required Configuration >",
        "solr.url" : "< Required Configuration >"
      }
    }



Use curl to post the configuration to one of the Kafka Connect Workers. Change `http://localhost:8083/` the the endpoint of
one of your Kafka Connect worker(s).

.. code-block:: bash
    :caption: Create a new connector

    curl -s -X POST -H 'Content-Type: application/json' --data @connector.json http://localhost:8083/connectors


.. code-block:: bash
    :caption: Update an existing connector

    curl -s -X PUT -H 'Content-Type: application/json' --data @connector.json http://localhost:8083/connectors/HttpSolrSinkConnector1/config


