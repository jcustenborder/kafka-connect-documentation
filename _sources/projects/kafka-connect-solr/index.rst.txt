===========
Apache Solr
===========

The SOLR connector is a high speed mechanism for writing data to `Apache Solr <http://lucene.apache.org/solr/>`_.


.. TIP::
    If you are seeing error messages such as `Invalid version (expected 2, but 60) or the data in not in 'javabin' format` compare the version of the Solr Server against the version of solrj the connector is compiled with. This error message is most likely due to a version mismatch between the server and solrj. To address this try replacing the solr-solrj-*.jar packaged with the connector with the version that matches the Solr server you are connecting to.



.. toctree::
    :hidden:
    :maxdepth: 1
    :glob:

    sources/*


.. toctree::
    :hidden:
    :maxdepth: 1
    :glob:

    sinks/*


.. toctree::
    :hidden:
    :maxdepth: 1
    :glob:

    transformations/*


.. toctree::
    :hidden:
    :maxdepth: 1
    :glob:

    converters/*


.. toctree::
    :hidden:
    :maxdepth: 1
    :glob:

    configProviders/*


.. toctree::
    :hidden:
    :maxdepth: 1

    schemas


------------
Installation
------------

The preferred method of installation is to utilize the `Confluent Hub Client <https://docs.confluent.io/current/connect/managing/confluent-hub/client.html>`_.

^^^^^^^^^^^^^
Confluent Hub
^^^^^^^^^^^^^
The plugin is hosted on the `Confluent Hub <https://www.confluent.io/hub/jcustenborder/kafka-connect-solr>`_. Installation through the
`Confluent Hub Client <https://docs.confluent.io/current/connect/managing/confluent-hub/client.html>`_ is simple. Use the following command line.


.. code-block:: bash

    confluent-hub install jcustenborder/kafka-connect-solr:latest


^^^^^^^^^^^^^^^^^^^
Manual Installation
^^^^^^^^^^^^^^^^^^^

#. Compile the source code with `mvn clean package`
#. Create a subdirectory called `kafka-connect-solr` under the `plugin.path` on your connect worker.
#. Extract the contents of the zip file from `target/components/packages/` to the directory you created in the previous step.
#. Restart the connect worker.
